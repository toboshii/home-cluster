---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2022.6.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    fullnameOverride: authentik
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.6.3
    initContainers:
      wait-for-db:
        image: ghcr.io/patrickdappollonio/wait-for:v1.0.0
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: database-authentik-user
                key: HOST
        command:
          - /wait-for
        args:
          - --host="$(POSTGRES_HOST):5432"
          - --verbose
    envValueFrom:
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          name: database-authentik-user
          key: HOST
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: database-authentik-user
          key: DATABASE_NAME
      AUTHENTIK_POSTGRESQL__USER:
        secretKeyRef:
          name: database-authentik-user
          key: LOGIN
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: database-authentik-user
          key: PASSWORD
    authentik:
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      redis:
        host: "authentik-redis-master"
      email:
        host: "smtp.sendgrid.net"
        port: 587
        use_tls: true
        username: "apikey"
        password: "${SECRET_SENDGRID_API_KEY}"
        from: "no-reply@${SECRET_DOMAIN}"
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      hosts:
        - host: "id.${SECRET_DOMAIN}"
          paths:
            - path: "/"
              pathType: Prefix
      tls:
        - hosts:
            - "id.${SECRET_DOMAIN}"
    redis:
      enabled: true
    prometheus:
      serviceMonitor:
        create: false
