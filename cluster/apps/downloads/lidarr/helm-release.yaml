---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: lidarr
      version: 13.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/lidarr
      tag: v1.0.0.2255
    env:
      TZ: "America/Chicago"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-auth@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "music-box"
        hosts:
        - host: "lidarr.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "lidarr.${SECRET_DOMAIN}"
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        hosts:
        - host: "lidarr.${SECRET_DOMAIN}"
          paths:
          - path: /api
            pathType: Prefix
        tls:
        - hosts:
          - "lidarr.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-v1
      media-franxx:
        enabled: true
        existingClaim: nfs-downloads-franxx-pvc
    podSecurityContext:
      supplementalGroups:
      - 100
    resources:
      requests:
        memory: 650Mi
        cpu: 1000m
      limits:
        memory: 1500Mi
    prometheus:
      podMonitor:
        enabled: true
        interval: 3m
        scrapeTimeout: 1m30s
    additionalContainers:
      exportarr:
        name: exportarr
        image: ghcr.io/onedr0p/exportarr:v1.1.0
        imagePullPolicy: IfNotPresent
        args: ["exportarr", "lidarr"]
        env:
        - name: PORT
          value: "32123"
        - name: URL
          value: "http://localhost"
        - name: CONFIG
          value: "/config/config.xml"
        - name: ENABLE_UNKNOWN_QUEUE_ITEMS
          value: "true"
        - name: ENABLE_ADDITIONAL_METRICS
          value: "false"
        ports:
        - name: exportarr
          containerPort: 32123
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
